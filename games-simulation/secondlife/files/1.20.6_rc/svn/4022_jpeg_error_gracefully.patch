#! /bin/sh /usr/share/dpatch/dpatch-run
## Handle unexpected files gracefully.dpatch by  <root@debian.example.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@

Index: ./indra/llimage/llimagejpeg.cpp
===================================================================
--- ./indra/llimage/llimagejpeg.cpp	(revision 183)
+++ ./indra/llimage/llimagejpeg.cpp	(working copy)
@@ -35,6 +35,8 @@
 
 #include "llerror.h"
 
+static jmp_buf	gSetjmpBuffer;
+
 LLImageJPEG::LLImageJPEG() 
 	:
 	LLImageFormatted(IMG_CODEC_JPEG),
@@ -77,6 +79,14 @@
 	jerr.emit_message =		&LLImageJPEG::errorEmitMessage;		// Conditionally emit a trace or warning message
 	jerr.output_message =	&LLImageJPEG::errorOutputMessage;	// Routine that actually outputs a trace or error message
 
+	// Establish the setjmp return context mSetjmpBuffer.  Used by library to abort.
+	if( setjmp(gSetjmpBuffer) ) 
+	{
+		// If we get here, the JPEG code has signaled an error.
+		jpeg_destroy_decompress(&cinfo);
+		return FALSE;
+	}
+
 	try
 	{
 		// Now we can initialize the JPEG decompression object.
@@ -209,6 +219,14 @@
 	jerr.output_message =	&LLImageJPEG::errorOutputMessage;	// Routine that actually outputs a trace or error message
 	
 
+	// Establish the setjmp return context mSetjmpBuffer.  Used by library to abort.
+	if( setjmp(gSetjmpBuffer) ) 
+	{
+		// If we get here, the JPEG code has signaled an error.
+		jpeg_destroy_decompress(&cinfo);
+		return FALSE;
+	}
+
 	try
 	{
 		// Now we can initialize the JPEG decompression object.
@@ -402,7 +420,7 @@
 	jpeg_destroy(cinfo);
 
 	// Return control to the setjmp point
-	throw 1;
+	longjmp(gSetjmpBuffer,1);
 }
 
 // Decide whether to emit a trace or warning message.
@@ -501,7 +519,7 @@
 	jerr.output_message =	&LLImageJPEG::errorOutputMessage;	// Routine that actually outputs a trace or error message
 
 	// Establish the setjmp return context mSetjmpBuffer.  Used by library to abort.
-	if( setjmp(mSetjmpBuffer) ) 
+	if( setjmp(gSetjmpBuffer) ) 
 	{
 		// If we get here, the JPEG code has signaled an error.
 		// We need to clean up the JPEG object, close the input file, and return.
