#! /bin/sh /usr/share/dpatch/dpatch-run
## 2543_possible_crash_in_group_voting_propsals.patch.dpatch by  <root@debian.example.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: 2543_possible_crash_in_group_voting_propsals.patch

@DPATCH@

--- linden-orig/indra/llui/llscrolllistctrl.cpp	2007-09-20 12:36:46.000000000 +0200
+++ linden/indra/llui/llscrolllistctrl.cpp	2007-09-26 02:26:16.406250000 +0200
@@ -543,6 +543,11 @@
 
 LLScrollListItem* LLScrollListCtrl::getFirstSelected() const
 {
+	if (!getCanSelect())
+	{
+		return NULL;
+	}
+
 	item_list::const_iterator iter;
 	for(iter = mItemList.begin(); iter != mItemList.end(); iter++)
 	{
@@ -558,6 +563,13 @@
 std::vector<LLScrollListItem*> LLScrollListCtrl::getAllSelected() const
 {
 	std::vector<LLScrollListItem*> ret;
+
+	if (!getCanSelect())
+	{
+		return ret;
+	}
+
+
 	item_list::const_iterator iter;
 	for(iter = mItemList.begin(); iter != mItemList.end(); iter++)
 	{
@@ -572,6 +584,12 @@
 
 S32 LLScrollListCtrl::getFirstSelectedIndex() const
 {
+	if (!getCanSelect())
+	{
+		return -1;
+	}
+
+
 	S32 CurSelectedIndex = 0;
 	item_list::const_iterator iter;
 	for (iter = mItemList.begin(); iter != mItemList.end(); iter++)
--- linden-orig/indra/newview/llpanelgroupvoting.cpp	2007-09-20 12:36:50.000000000 +0200
+++ linden/indra/newview/llpanelgroupvoting.cpp	2007-09-26 02:14:20.218750000 +0200
@@ -524,6 +524,7 @@
 	//we're pining the server in high latency situations
 	addPendingActiveScrollListItem(0, 0, ADD_BOTTOM);
 	mProposals->setCanSelect(FALSE);
+	mBtnViewProposalItem->setEnabled(FALSE);
 
 	LLMessageSystem *msg = gMessageSystem;
 	msg->newMessageFast(_PREHASH_GroupActiveProposalsRequest);
@@ -620,6 +621,7 @@
 	//add some text so the user knows we're doing something
 	addPendingHistoryScrollListItem(0, 0, ADD_BOTTOM);
 	mVotesHistory->setCanSelect(FALSE);
+	mBtnViewHistoryItem->setEnabled(FALSE);
 
 	LLMessageSystem *msg = gMessageSystem;
 	msg->newMessageFast(_PREHASH_GroupVoteHistoryRequest);
@@ -835,6 +837,7 @@
 		//no active proposals and make the scroll list unselectable
 		self->addNoActiveScrollListItem(ADD_BOTTOM);
 		self->mProposals->setCanSelect(FALSE);
+		self->mBtnViewProposalItem->setEnabled(FALSE);
 	}
 	else if ( (U32)received != num_expected )
 	{
@@ -842,6 +845,7 @@
 											 num_expected,
 											 ADD_BOTTOM);
 		self->mProposals->setCanSelect(FALSE);
+		self->mBtnViewProposalItem->setEnabled(FALSE);
 	}
 	else
 	{
@@ -855,6 +859,7 @@
 		}
 
 		self->mProposals->setCanSelect(TRUE);
+		self->mBtnViewProposalItem->setEnabled(TRUE);
 	}
 }
 
@@ -904,7 +909,7 @@
 		//no active proposals and make the scroll list unselectable
 		self->addNoHistoryScrollListItem(ADD_BOTTOM);
 		self->mVotesHistory->setCanSelect(FALSE);
-
+		self->mBtnViewHistoryItem->setEnabled(FALSE);
 		return;
 	}
 
@@ -1024,6 +1029,7 @@
 											  num_expected,
 											  ADD_BOTTOM);
 		self->mVotesHistory->setCanSelect(FALSE);
+		self->mBtnViewHistoryItem->setEnabled(FALSE);
 	}
 	else
 	{
@@ -1037,6 +1043,7 @@
 		}
 
 		self->mVotesHistory->setCanSelect(TRUE);
+		self->mBtnViewHistoryItem->setEnabled(TRUE);
 	}
 }
 
